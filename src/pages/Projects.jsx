import {styled} from '@mui/material/styles'
import { Divider, Checkbox } from "@mui/material";
import {
    TerminalTwoTone, 
    DataObjectTwoTone, 
    ArrowDropDownRounded,
    ArrowDropUpRounded,
    GitHub
} from '@mui/icons-material'
import {useState, useEffect} from 'react'


const Item = styled('div')(({ theme }) => ({
  backgroundColor: '#314158',
  padding: theme.spacing(1),
  textAlign: 'center',
  color:    '#90A1B9',
  fontFamily: 'Intel One Mono',
  fontWeight: '800',
  cursor: 'pointer',
  display: 'flex',
  gap: '20px',
  flexDirection: 'column',
  paddingTop: '20px'
}));

export default function Projects() {
    const [isPlangOpen, setPlangOpen] = useState(false);
    const [techSet, setTechSet] = useState([]);
    const [isFrameworkOpen, setFrameworkOpen] = useState(false);

    const technologies = [
        { name: 'React', checked: false },
        { name: 'NodeJs', checked: false },
        { name: 'NestJs', checked: false },
        { name: 'ExpressJs', checked: false },
        { name: 'FastAPI', checked: false },
    ];

    const pglang = [
        { name: 'JavaScript', checked: false },
        { name: 'Python', checked: false },
        { name: 'TypeScript', checked: false },
        { name: 'C++', checked: false },
        { name: 'C#', checked: false }
    ];
    const [langStates, setLangStates] = useState(pglang);

    const [techStates, setTechStates] = useState(technologies);
    const projects = [
        {
        id: 1,
        title: 'My Portfolio',
        description: 'Description of my portfolio',
        image: 'https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=300&h=200&fit=crop&auto=format',
        deploy: 'https://yourusername.github.io/your-repo/',
        github: 'https://github.com/yourusername/your-repo',
        tech: ['React']
        },
        {
        id: 2,
        title: 'WQI Analysis',
        description: 'Multidisciplinary Project - Information Systems Orientation',
        image: 'https://images.unsplash.com/photo-1556438064-2d7646166914?w=300&h=200&fit=crop&auto=format',
        github: 'https://github.com/yourusername/your-repo',
        tech: ['React', 'NodeJs', 'ExpressJs', 'FastAPI']
        },
        {
        id: 3,
        title: 'Just Another Virtual Machine',
        description: 'Assignment of Data Structures & Algorithms',
        image: 'https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=300&h=200&fit=crop&auto=format',
        deploy: 'https://yourusername.github.io/your-repo/',
        github: 'https://github.com/yourusername/your-repo',
        tech: ['C++']
        }
    ];

    const techItemStyle = {
        display: 'flex',
        alignItems: 'center',
        padding: '8px 20px',
        cursor: 'pointer',
        transition: 'all 0.2s ease'
    };

    const checkboxStyle = (isChecked) => ({
        width: '14px',
        height: '14px',
        marginRight: '10px',
        border: '1px solid #4a5568',
        backgroundColor: isChecked ? '#4299e1' : 'transparent',
        position: 'relative',
        borderRadius: '2px',
        cursor: 'pointer'
    });

    const techIconStyle = {
        width: '16px',
        height: '16px',
        marginRight: '8px'
    };

    const getProgrammingIcon = (name) => {
        const icons = {
            'JavaScript': (
                <svg style={techIconStyle} width="18px" height="18px" viewBox="0 0 256 256" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M0,0 L256,0 L256,256 L0,256 L0,0 Z" fill="#F7DF1E"> </path> <path d="M67.311746,213.932292 L86.902654,202.076241 C90.6821079,208.777346 94.1202286,214.447137 102.367086,214.447137 C110.272203,214.447137 115.256076,211.354819 115.256076,199.326883 L115.256076,117.528787 L139.313575,117.528787 L139.313575,199.666997 C139.313575,224.58433 124.707759,235.925943 103.3984,235.925943 C84.1532952,235.925943 72.9819429,225.958603 67.3113397,213.93026" fill="#000000"> </path> <path d="M152.380952,211.354413 L171.969422,200.0128 C177.125994,208.433981 183.827911,214.619835 195.684368,214.619835 C205.652521,214.619835 212.009041,209.635962 212.009041,202.762159 C212.009041,194.513676 205.479416,191.592025 194.481168,186.78207 L188.468419,184.202565 C171.111213,176.81473 159.597308,167.53534 159.597308,147.944838 C159.597308,129.901308 173.344508,116.153295 194.825752,116.153295 C210.119924,116.153295 221.117765,121.48094 229.021663,135.400432 L210.29059,147.428775 C206.166146,140.040127 201.699556,137.119289 194.826159,137.119289 C187.78047,137.119289 183.312254,141.587098 183.312254,147.428775 C183.312254,154.646349 187.78047,157.568406 198.089956,162.036622 L204.103924,164.614095 C224.553448,173.378641 236.067352,182.313448 236.067352,202.418387 C236.067352,224.071924 219.055137,235.927975 196.200432,235.927975 C173.860978,235.927975 159.425829,225.274311 152.381359,211.354413" fill="#000000"> </path> </g> </g></svg>
            ),
            'Python': (
                <svg style={techIconStyle} width="18px" height="18px" viewBox="0 -0.5 256 256" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <defs> <linearGradient x1="12.9593594%" y1="12.0393928%" x2="79.6388325%" y2="78.2008538%" id="linearGradient-1"> <stop stop-color="#387EB8" offset="0%"> </stop> <stop stop-color="#366994" offset="100%"> </stop> </linearGradient> <linearGradient x1="19.127525%" y1="20.5791813%" x2="90.7415328%" y2="88.4290372%" id="linearGradient-2"> <stop stop-color="#FFE052" offset="0%"> </stop> <stop stop-color="#FFC331" offset="100%"> </stop> </linearGradient> </defs> <g> <path d="M126.915866,0.0722755491 C62.0835831,0.0722801733 66.1321288,28.1874648 66.1321288,28.1874648 L66.2044043,57.3145115 L128.072276,57.3145115 L128.072276,66.0598532 L41.6307171,66.0598532 C41.6307171,66.0598532 0.144551098,61.3549438 0.144551098,126.771315 C0.144546474,192.187673 36.3546019,189.867871 36.3546019,189.867871 L57.9649915,189.867871 L57.9649915,159.51214 C57.9649915,159.51214 56.8001363,123.302089 93.5968379,123.302089 L154.95878,123.302089 C154.95878,123.302089 189.434218,123.859386 189.434218,89.9830604 L189.434218,33.9695088 C189.434218,33.9695041 194.668541,0.0722755491 126.915866,0.0722755491 L126.915866,0.0722755491 L126.915866,0.0722755491 Z M92.8018069,19.6589497 C98.9572068,19.6589452 103.932242,24.6339846 103.932242,30.7893845 C103.932246,36.9447844 98.9572068,41.9198193 92.8018069,41.9198193 C86.646407,41.9198239 81.6713721,36.9447844 81.6713721,30.7893845 C81.6713674,24.6339846 86.646407,19.6589497 92.8018069,19.6589497 L92.8018069,19.6589497 L92.8018069,19.6589497 Z" fill="url(#linearGradient-1)"> </path> <path d="M128.757101,254.126271 C193.589403,254.126271 189.540839,226.011081 189.540839,226.011081 L189.468564,196.884035 L127.600692,196.884035 L127.600692,188.138693 L214.042251,188.138693 C214.042251,188.138693 255.528417,192.843589 255.528417,127.427208 C255.52844,62.0108566 219.318366,64.3306589 219.318366,64.3306589 L197.707976,64.3306589 L197.707976,94.6863832 C197.707976,94.6863832 198.87285,130.896434 162.07613,130.896434 L100.714182,130.896434 C100.714182,130.896434 66.238745,130.339138 66.238745,164.215486 L66.238745,220.229038 C66.238745,220.229038 61.0044225,254.126271 128.757101,254.126271 L128.757101,254.126271 L128.757101,254.126271 Z M162.87116,234.539597 C156.715759,234.539597 151.740726,229.564564 151.740726,223.409162 C151.740726,217.253759 156.715759,212.278727 162.87116,212.278727 C169.026563,212.278727 174.001595,217.253759 174.001595,223.409162 C174.001618,229.564564 169.026563,234.539597 162.87116,234.539597 L162.87116,234.539597 L162.87116,234.539597 Z" fill="url(#linearGradient-2)"> </path> </g> </g></svg>
            ),
            'TypeScript': (
                <svg style={techIconStyle} width="18px" height="18px" viewBox="0 0 256 256" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <polygon fill="#007ACC" transform="translate(128.000000, 128.000000) scale(1, -1) translate(-128.000000, -128.000000) " points="0 128 0 0 128 0 256 0 256 128 256 256 128 256 0 256"> </polygon> <path d="M146.658132,223.436863 L146.739401,212.953054 L130.079084,212.953054 L113.418767,212.953054 L113.418767,165.613371 L113.418767,118.273689 L101.63464,118.273689 L89.8505126,118.273689 L89.8505126,165.613371 L89.8505126,212.953054 L73.1901951,212.953054 L56.5298776,212.953054 L56.5298776,223.233689 C56.5298776,228.922577 56.6517824,233.676863 56.8143221,233.798768 C56.9362269,233.961308 77.2130522,234.042577 101.797179,234.001943 L146.536227,233.880038 L146.658132,223.436863 Z" fill="#FFFFFF" transform="translate(101.634640, 176.142993) rotate(-180.000000) translate(-101.634640, -176.142993) "> </path> <path d="M206.566631,234.272145 C213.068219,232.646748 218.025679,229.761668 222.57679,225.048018 C224.933616,222.528653 228.428219,217.936907 228.712663,216.839764 C228.793933,216.514684 217.659965,209.037859 210.914568,204.852462 C210.670758,204.689922 209.69552,205.74643 208.598377,207.371827 C205.306949,212.166748 201.852981,214.239129 196.570441,214.604843 C188.809171,215.133097 183.811076,211.069605 183.851711,204.283573 C183.851711,202.292462 184.136155,201.114049 184.948854,199.488653 C186.65552,195.953414 189.825044,193.840399 199.7806,189.533097 C218.106949,181.649922 225.949489,176.448653 230.825679,169.053097 C236.270758,160.804208 237.489806,147.638494 233.792028,137.845478 C229.728536,127.199129 219.651076,119.966113 205.469489,117.568653 C201.080917,116.796589 190.678377,116.918494 185.964727,117.771827 C175.684092,119.600399 165.931711,124.679764 159.917743,131.343891 C157.560917,133.944526 152.969171,140.730557 153.253616,141.218176 C153.37552,141.380716 154.432028,142.030875 155.610441,142.721668 C156.748219,143.371827 161.05552,145.850557 165.119012,148.207383 L172.473933,152.474049 L174.01806,150.198494 C176.171711,146.907065 180.885362,142.396589 183.729806,140.893097 C191.897425,136.585795 203.112663,137.195319 208.639012,142.15278 C210.995838,144.30643 211.971076,146.541351 211.971076,149.83278 C211.971076,152.799129 211.605362,154.099446 210.061235,156.334367 C208.070123,159.178811 204.006631,161.576272 192.466314,166.574367 C179.259965,172.263256 173.571076,175.798494 168.369806,181.406113 C165.362822,184.656907 162.518377,189.858176 161.339965,194.206113 C160.364727,197.822621 160.120917,206.884208 160.892981,210.541351 C163.61552,223.300716 173.245996,232.199764 187.143139,234.841034 C191.653616,235.694367 202.137425,235.369287 206.566631,234.272145 Z" fill="#FFFFFF" transform="translate(194.578507, 176.190240) scale(1, -1) translate(-194.578507, -176.190240) "> </path> </g> </g></svg>
            ),
            'C#': (
                <svg style={techIconStyle} width="18px" height="18px" viewBox="-16 0 288 288" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M255.569,84.452376 C255.567,79.622376 254.534,75.354376 252.445,71.691376 C250.393,68.089376 247.32,65.070376 243.198,62.683376 C209.173,43.064376 175.115,23.505376 141.101,3.86637605 C131.931,-1.42762395 123.04,-1.23462395 113.938,4.13537605 C100.395,12.122376 32.59,50.969376 12.385,62.672376 C4.064,67.489376 0.015,74.861376 0.013,84.443376 C0,123.898376 0.013,163.352376 0,202.808376 C0,207.532376 0.991,211.717376 2.988,215.325376 C5.041,219.036376 8.157,222.138376 12.374,224.579376 C32.58,236.282376 100.394,275.126376 113.934,283.115376 C123.04,288.488376 131.931,288.680376 141.104,283.384376 C175.119,263.744376 209.179,244.186376 243.209,224.567376 C247.426,222.127376 250.542,219.023376 252.595,215.315376 C254.589,211.707376 255.582,207.522376 255.582,202.797376 C255.582,202.797376 255.582,123.908376 255.569,84.452376" fill="#A179DC" fill-rule="nonzero"> </path> <path d="M128.182,143.241376 L2.988,215.325376 C5.041,219.036376 8.157,222.138376 12.374,224.579376 C32.58,236.282376 100.394,275.126376 113.934,283.115376 C123.04,288.488376 131.931,288.680376 141.104,283.384376 C175.119,263.744376 209.179,244.186376 243.209,224.567376 C247.426,222.127376 250.542,219.023376 252.595,215.315376 L128.182,143.241376" fill="#280068" fill-rule="nonzero"> </path> <path d="M255.569,84.452376 C255.567,79.622376 254.534,75.354376 252.445,71.691376 L128.182,143.241376 L252.595,215.315376 C254.589,211.707376 255.58,207.522376 255.582,202.797376 C255.582,202.797376 255.582,123.908376 255.569,84.452376" fill="#390091" fill-rule="nonzero"> </path> <path d="M201.892326,116.294008 L201.892326,129.767692 L215.36601,129.767692 L215.36601,116.294008 L222.102852,116.294008 L222.102852,129.767692 L235.576537,129.767692 L235.576537,136.504534 L222.102852,136.504534 L222.102852,149.978218 L235.576537,149.978218 L235.576537,156.71506 L222.102852,156.71506 L222.102852,170.188744 L215.36601,170.188744 L215.36601,156.71506 L201.892326,156.71506 L201.892326,170.188744 L195.155484,170.188744 L195.155484,156.71506 L181.6818,156.71506 L181.6818,149.978218 L195.155484,149.978218 L195.155484,136.504534 L181.6818,136.504534 L181.6818,129.767692 L195.155484,129.767692 L195.155484,116.294008 L201.892326,116.294008 Z M215.36601,136.504534 L201.892326,136.504534 L201.892326,149.978218 L215.36601,149.978218 L215.36601,136.504534 Z" fill="#FFFFFF"> </path> <path d="M128.456752,48.625876 C163.600523,48.625876 194.283885,67.7121741 210.718562,96.0819435 L210.558192,95.808876 L169.209615,119.617159 C161.062959,105.823554 146.128136,96.5150717 128.996383,96.3233722 L128.456752,96.3203544 C102.331178,96.3203544 81.1506705,117.499743 81.1506705,143.625316 C81.1506705,152.168931 83.4284453,160.17752 87.3896469,167.094792 C95.543745,181.330045 110.872554,190.931398 128.456752,190.931398 C146.149522,190.931398 161.565636,181.208041 169.67832,166.820563 L169.481192,167.165876 L210.767678,191.083913 C194.51328,219.21347 164.25027,238.240861 129.514977,238.620102 L128.456752,238.625876 C93.2021701,238.625876 62.4315028,219.422052 46.0382398,190.902296 C38.0352471,176.979327 33.4561922,160.837907 33.4561922,143.625316 C33.4561922,91.1592636 75.9884604,48.625876 128.456752,48.625876 Z" fill="#FFFFFF" fill-rule="nonzero"> </path> </g> </g></svg>
            ),
            'C++': (
                <svg style={techIconStyle} width="18px" height="18px" viewBox="-16 0 288 288" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M255.569,84.72 C255.567,79.89 254.534,75.622 252.445,71.959 C250.393,68.357 247.32,65.338 243.198,62.951 C209.173,43.332 175.115,23.773 141.101,4.134 C131.931,-1.16 123.04,-0.967 113.938,4.403 C100.395,12.39 32.59,51.237 12.385,62.94 C4.064,67.757 0.015,75.129 0.013,84.711 C0,124.166 0.013,163.62 0,203.076 C0.002,207.8 0.991,211.985 2.988,215.593 C5.041,219.304 8.157,222.406 12.374,224.847 C32.58,236.55 100.394,275.394 113.934,283.383 C123.04,288.756 131.931,288.948 141.104,283.652 C175.119,264.012 209.179,244.454 243.209,224.835 C247.426,222.395 250.542,219.291 252.595,215.583 C254.589,211.975 255.58,207.79 255.582,203.065 C255.582,203.065 255.582,124.176 255.569,84.72" fill="#5C8DBC"> </path> <path d="M128.182,143.509 L2.988,215.593 C5.041,219.304 8.157,222.406 12.374,224.847 C32.58,236.55 100.394,275.394 113.934,283.383 C123.04,288.756 131.931,288.948 141.104,283.652 C175.119,264.012 209.179,244.454 243.209,224.835 C247.426,222.395 250.542,219.291 252.595,215.583 L128.182,143.509" fill="#1A4674"> </path> <path d="M91.101,164.861 C98.386,177.579 112.081,186.157 127.791,186.157 C143.598,186.157 157.371,177.47 164.619,164.616 L128.182,143.509 L91.101,164.861" fill="#1A4674"> </path> <path d="M255.569,84.72 C255.567,79.89 254.534,75.622 252.445,71.959 L128.182,143.509 L252.595,215.583 C254.589,211.975 255.58,207.79 255.582,203.065 C255.582,203.065 255.582,124.176 255.569,84.72" fill="#1B598E"> </path> <path d="M248.728,148.661 L239.006,148.661 L239.006,158.385 L229.282,158.385 L229.282,148.661 L219.561,148.661 L219.561,138.94 L229.282,138.94 L229.282,129.218 L239.006,129.218 L239.006,138.94 L248.728,138.94 L248.728,148.661" fill="#FFFFFF"> </path> <path d="M213.253,148.661 L203.532,148.661 L203.532,158.385 L193.81,158.385 L193.81,148.661 L184.088,148.661 L184.088,138.94 L193.81,138.94 L193.81,129.218 L203.532,129.218 L203.532,138.94 L213.253,138.94 L213.253,148.661" fill="#FFFFFF"> </path> <path d="M164.619,164.616 C157.371,177.47 143.598,186.157 127.791,186.157 C112.081,186.157 98.386,177.579 91.101,164.861 C87.562,158.681 85.527,151.526 85.527,143.893 C85.527,120.552 104.45,101.63 127.791,101.63 C143.4,101.63 157.023,110.101 164.344,122.689 L201.285,101.417 C186.602,76.071 159.189,59.019 127.791,59.019 C80.915,59.019 42.916,97.019 42.916,143.893 C42.916,159.271 47.007,173.692 54.157,186.131 C68.803,211.611 96.294,228.768 127.791,228.768 C159.346,228.768 186.88,211.542 201.505,185.987 L164.619,164.616" fill="#FFFFFF"> </path> </g> </g></svg>
            )
        };
        return icons[name] || null;
    };

    const getFrameworkIcon = (name) => {
        const icons = {
        'React': (
            <svg viewBox="0 0 24 24" style={techIconStyle}>
            <circle cx="12" cy="12" r="2" fill="#61dafb"/>
            <ellipse cx="12" cy="12" rx="11" ry="4.2" fill="none" stroke="#61dafb" strokeWidth="1"/>
            <ellipse cx="12" cy="12" rx="11" ry="4.2" fill="none" stroke="#61dafb" strokeWidth="1" transform="rotate(60 12 12)"/>
            <ellipse cx="12" cy="12" rx="11" ry="4.2" fill="none" stroke="#61dafb" strokeWidth="1" transform="rotate(120 12 12)"/>
            </svg>
        ),
        'NodeJs': (
            <svg style={techIconStyle} width="18px" height="18px" viewBox="-16.5 0 289 289" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M127.999999,288.463771 C124.024844,288.463771 120.314699,287.403728 116.869564,285.548656 L81.6231884,264.612838 C76.32298,261.697724 78.9730854,260.637682 80.5631458,260.107661 C87.7184259,257.72257 89.0434775,257.192547 96.4637688,252.952381 C97.2587979,252.422361 98.3188405,252.687372 99.1138718,253.217392 L126.144927,269.383024 C127.20497,269.913045 128.530021,269.913045 129.325053,269.383024 L235.064182,208.165634 C236.124225,207.635611 236.654245,206.575571 236.654245,205.250519 L236.654245,83.0807467 C236.654245,81.7556929 236.124225,80.6956526 235.064182,80.1656324 L129.325053,19.2132506 C128.26501,18.6832305 126.939959,18.6832305 126.144927,19.2132506 L20.4057954,80.1656324 C19.3457551,80.6956526 18.8157349,82.0207041 18.8157349,83.0807467 L18.8157349,205.250519 C18.8157349,206.31056 19.3457551,207.635611 20.4057954,208.165634 L49.2919247,224.861286 C64.9275364,232.811595 74.7329196,223.536234 74.7329196,214.260871 L74.7329196,93.681159 C74.7329196,92.0910985 76.0579711,90.5010358 77.9130428,90.5010358 L91.4285716,90.5010358 C93.0186343,90.5010358 94.6086948,91.8260873 94.6086948,93.681159 L94.6086948,214.260871 C94.6086948,235.196689 83.2132512,247.387164 63.3374737,247.387164 C57.2422362,247.387164 52.4720502,247.387164 38.9565214,240.761906 L11.1304347,224.861286 C4.24016581,220.886129 5.68434189e-14,213.46584 5.68434189e-14,205.515528 L5.68434189e-14,83.3457557 C5.68434189e-14,75.3954465 4.24016581,67.9751552 11.1304347,64.0000006 L116.869564,2.78260752 C123.494824,-0.927535841 132.505176,-0.927535841 139.130436,2.78260752 L244.869565,64.0000006 C251.759834,67.9751552 256,75.3954465 256,83.3457557 L256,205.515528 C256,213.46584 251.759834,220.886129 244.869565,224.861286 L139.130436,286.078676 C135.685299,287.668739 131.710145,288.463771 127.999999,288.463771 L127.999999,288.463771 Z M160.596274,204.455488 C114.219461,204.455488 104.679089,183.254659 104.679089,165.233955 C104.679089,163.643893 106.004141,162.053832 107.859212,162.053832 L121.639752,162.053832 C123.229813,162.053832 124.554864,163.113872 124.554864,164.703935 C126.674947,178.749484 132.770187,185.639753 160.861283,185.639753 C183.122154,185.639753 192.662526,180.604556 192.662526,168.67909 C192.662526,161.788821 190.012423,156.753624 155.296065,153.308489 C126.409938,150.393375 108.389235,144.033126 108.389235,120.977226 C108.389235,99.5113875 126.409938,86.7908901 156.621119,86.7908901 C190.542443,86.7908901 207.238095,98.4513472 209.358178,123.89234 C209.358178,124.687371 209.093167,125.482403 208.563147,126.277434 C208.033127,126.807454 207.238095,127.337474 206.443064,127.337474 L192.662526,127.337474 C191.337475,127.337474 190.012423,126.277434 189.747412,124.952382 C186.567289,110.376813 178.351966,105.606625 156.621119,105.606625 C132.240165,105.606625 129.325053,114.086957 129.325053,120.447205 C129.325053,128.132506 132.770187,130.5176 165.631471,134.757766 C198.227744,138.997931 213.598344,145.093169 213.598344,167.884058 C213.333333,191.20497 194.252589,204.455488 160.596274,204.455488 L160.596274,204.455488 Z" fill="#539E43"> </path> </g> </g></svg>
        ),
        'NestJs': (
            <svg style={techIconStyle} width="18px" height="18px" viewBox="0 -0.5 256 256" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M150.735739,0 C148.8846,0 147.165687,0.396686115 145.57898,0.925572289 C148.950692,3.17338764 150.801841,6.14846547 151.727441,9.52018849 C151.793738,9.98296798 151.925779,10.3135464 151.991974,10.7763105 C152.058271,11.1729967 152.124118,11.5696685 152.124118,11.9663525 C152.388692,17.7842283 150.603503,18.5114632 149.34739,21.9493092 C147.430118,26.3788568 147.959,31.1389429 150.272949,34.973472 C150.471297,35.4362392 150.735739,35.9651387 151.066323,36.4279315 C148.554016,19.7014919 162.503769,17.1892201 165.082118,11.9663525 C165.280456,7.40458752 161.512066,4.36341631 158.53702,2.24781739 C155.69419,0.528900497 153.115769,0 150.735739,0 Z M171.759482,3.76840811 C171.494928,5.28898963 171.693287,4.89231579 171.627369,5.68567267 C171.561174,6.21455987 171.561174,6.87570033 171.495245,7.40458752 C171.363122,7.93348904 171.230671,8.46237624 171.032435,8.99130129 C170.900322,9.52018849 170.701881,10.049089 170.503553,10.5779752 C170.238979,11.1069012 170.040763,11.5696685 169.776312,12.0985679 C169.577984,12.3631266 169.445758,12.6274551 169.24742,12.8919248 C169.115296,13.0902602 168.982866,13.2885966 168.850753,13.486932 C168.520199,13.9497371 168.189615,14.4125043 167.859071,14.809175 C167.462374,15.2058612 167.13182,15.6686274 166.669009,15.999217 C166.669009,16.0654117 166.669009,16.0654117 166.669009,16.0654117 C166.272343,16.3959758 165.875666,16.7926476 165.412897,17.1231994 C164.024527,18.1809861 162.437851,18.9743419 160.983358,19.9660342 C160.520599,20.296586 160.057779,20.5610567 159.661122,20.9577265 C159.198343,21.2882783 158.801656,21.6188301 158.404999,22.0155141 C157.942189,22.4121859 157.611635,22.80887 157.214948,23.2716618 C156.884394,23.6683469 156.487728,24.1311161 156.223287,24.5939202 C155.892702,25.0566864 155.562158,25.5194802 155.297687,25.9822587 C155.033143,26.5111448 154.834907,26.9739499 154.570456,27.5028381 C154.372128,28.0317243 154.173769,28.4945314 154.041564,29.0234166 C153.843225,29.6184381 153.710999,30.1473386 153.578774,30.6762513 C153.512579,30.940808 153.512579,31.2712462 153.446651,31.5357026 C153.380354,31.8002603 153.380354,32.0645898 153.314537,32.3290595 C153.314537,32.8579457 153.248343,33.4529672 153.248343,33.9818544 C153.248343,34.3785385 153.248343,34.7752092 153.314537,35.1718943 C153.314537,35.7007825 153.380732,36.2296708 153.512866,36.8246902 C153.57906,37.3535764 153.711184,37.8824769 153.84345,38.411403 C154.041789,38.9402891 154.174014,39.4691896 154.372332,39.9980768 C154.504476,40.3286675 154.702886,40.6592183 154.835142,40.9236491 L139.629276,35.0396492 C137.050876,34.3124134 134.53863,33.6513108 131.96023,33.0562893 C130.571882,32.7257385 129.183533,32.3951631 127.795164,32.064598 C123.828405,31.2712544 119.795584,30.6762585 115.762713,30.2795877 C115.6306,30.2795877 115.564384,30.2133828 115.432159,30.2133828 C111.46539,29.8167121 107.564785,29.6183757 103.598046,29.6183757 C100.689082,29.6183757 97.7801182,29.7504898 94.9372865,29.9489275 C90.9044271,30.2134852 86.8715616,30.7422833 82.8387298,31.4033859 C81.8470355,31.5355134 80.8553432,31.7339756 79.8636479,31.932313 C77.814172,32.3289582 75.8308161,32.7917633 73.9135536,33.2545551 C72.9218613,33.5191127 71.930167,33.7834556 70.9384737,34.0478874 C69.9468122,34.4445571 69.0212429,34.9073643 68.095641,35.304035 C67.3684092,35.6345868 66.6411805,35.9651499 65.9139477,36.2957273 C65.7818254,36.3619322 65.6493941,36.3619322 65.5833938,36.4278547 C64.9222554,36.7584055 64.32724,37.0228363 63.7322543,37.353425 C63.5339149,37.4196299 63.4016677,37.4855401 63.2694534,37.5517624 C62.5422226,37.8823152 61.8149939,38.278986 61.2199754,38.6095491 C60.7571755,38.8078855 60.2944062,39.0723419 59.8977303,39.2706905 C59.6993898,39.4028047 59.4349273,39.5352359 59.3027129,39.6012424 C58.7076986,39.9317942 58.1126822,40.2623439 57.5837889,40.5929346 C56.9887725,40.9234854 56.4598792,41.2540372 55.9970792,41.584589 C55.534312,41.9151787 55.071513,42.1796095 54.6748331,42.5101603 C54.6085975,42.5763652 54.5427108,42.5763652 54.4764936,42.6422888 C54.0798177,42.9068454 53.6170484,43.2372949 53.2203726,43.5678846 C53.2203726,43.5678846 53.1541472,43.6340792 53.0882492,43.7000099 C52.7576954,43.9645676 52.4271088,44.2288992 52.0965559,44.49333 C51.9644347,44.5595349 51.8320013,44.6916654 51.699879,44.7578866 C51.3693252,45.0224464 51.0387713,45.3529081 50.7082164,45.6173635 C50.6419911,45.7494899 50.509879,45.8156999 50.4436618,45.8819222 C50.0469849,46.278594 49.650307,46.6091448 49.2536301,47.0058299 C49.1874047,47.0058299 49.1874047,47.0720348 49.1215078,47.137944 C48.7248309,47.4685081 48.328155,47.8651809 47.9314781,48.261865 C47.8652527,48.3280699 47.8652527,48.3939781 47.7993548,48.3939781 C47.4688009,48.7245309 47.138247,49.0551195 46.8076615,49.4517647 C46.6755412,49.5838911 46.4771076,49.7163245 46.3448932,49.8484365 C46.0143394,50.2451216 45.6176614,50.6417934 45.2209856,51.0384785 C45.1547602,51.1705936 45.0226471,51.2368149 44.9564299,51.3690293 C44.4275356,51.8979554 43.9647356,52.4268426 43.4358433,52.955742 C43.3696179,53.0219469 43.303722,53.0878531 43.2375059,53.1540785 C42.1796895,54.2779851 41.0557798,55.4018928 39.8657788,56.3935779 C38.6757491,57.4513625 37.4196229,58.4430548 36.1634702,59.3025112 C34.841222,60.2281111 33.5850989,61.0214342 32.1967287,61.814788 C30.8744805,62.5419983 29.4861114,63.203147 28.0316498,63.7981726 C26.6432786,64.3931777 25.1888181,64.9220905 23.7343535,65.3848495 C20.9576141,65.9798546 18.1147803,67.1037725 15.6686255,67.302111 C15.1397332,67.302111 14.5447168,67.4342445 14.0158235,67.5004392 C13.4208102,67.6325625 12.8919168,67.765003 12.3630245,67.8971366 C11.8341312,68.0954546 11.3052082,68.2938033 10.7763138,68.4921315 C10.2474205,68.6904699 9.71852817,68.9549314 9.18963483,69.2193827 C8.72683488,69.5499263 8.19794359,69.8143878 7.73514159,70.1449417 C7.27237028,70.4754956 6.80957032,70.8721622 6.41289239,71.2688494 C5.95012415,71.5994339 5.48732419,72.0622134 5.09064626,72.4588699 C4.69396833,72.9216903 4.29729245,73.318357 3.96673818,73.781116 C3.63618422,74.3100083 3.23950659,74.7728185 2.97504427,75.301721 C2.64449041,75.764521 2.31393666,76.2934031 2.04947434,76.8222749 C1.78491922,77.417321 1.52058223,77.9462031 1.32224285,78.5412287 C1.1239045,79.070121 0.925566048,79.6651261 0.727227595,80.2601517 C0.59510611,80.7890338 0.462672683,81.3179363 0.396673941,81.8468082 C0.396673941,81.9131051 0.330459836,81.978952 0.330459836,82.0451568 C0.198337328,82.6402029 0.198337328,83.4335669 0.132120563,83.8302541 C0.0659064584,84.2930234 0,84.6896798 0,85.15249 C0,85.4170436 0,85.7474747 0.066214105,86.0119259 C0.13242821,86.4747361 0.198334464,86.8714028 0.330769119,87.2681104 C0.462890603,87.6647259 0.595324236,88.061413 0.793538485,88.4581002 C0.793538485,88.5242949 0.793538485,88.5242949 0.793538485,88.5242949 C0.991876836,88.9210025 1.25633906,89.3176589 1.52077007,89.7143358 C1.78532508,90.1110127 2.04969348,90.5076896 2.38024734,90.9043768 C2.7108011,91.2349306 3.10747903,91.6315768 3.50415543,91.9621512 C3.90083325,92.3588281 4.29751139,92.6893819 4.76027963,93.0199358 C6.34698828,94.4083152 6.74366519,94.8711151 8.7931472,95.9288895 C9.12369799,96.1272382 9.45428561,96.2594639 9.85096252,96.4578023 C9.91718788,96.4578023 9.98308482,96.523997 10.0492999,96.523997 C10.0492999,96.6561101 10.0492999,96.7223457 10.1155253,96.8545918 C10.1817404,97.3834943 10.3138627,97.9123662 10.4460792,98.4412789 C10.5782004,99.0362943 10.7766647,99.5652071 10.9750032,100.027976 C11.1733416,100.424663 11.3055571,100.82132 11.5038965,101.218017 C11.5701117,101.350151 11.6360199,101.482571 11.702235,101.548571 C11.9667896,102.077453 12.2311273,102.540284 12.4955581,103.003033 C12.8261437,103.465812 13.1566965,103.928592 13.4872494,104.391412 C13.8178053,104.788069 14.2144832,105.250858 14.6111591,105.647525 C15.007837,106.044212 15.4045149,106.374776 15.8673159,106.771422 C15.8673159,106.771422 15.9335413,106.837719 15.9994362,106.837719 C16.3961151,107.168304 16.79279,107.498868 17.1894689,107.763278 C17.6522382,108.093853 18.1150382,108.358283 18.6439294,108.622755 C19.1067304,108.887309 19.6356238,109.151648 20.1645161,109.349996 C20.561194,109.548335 21.0239622,109.680571 21.4867642,109.812786 C21.5529896,109.879083 21.6188855,109.879083 21.7513199,109.94493 C22.0158745,110.011227 22.3463025,110.077033 22.610765,110.143248 C22.4124276,113.713309 22.3462094,117.085032 22.8753217,118.275083 C23.4703063,119.597319 26.3792611,115.564468 29.288218,110.936612 C28.8915421,115.498365 28.6270785,120.853432 29.288218,122.44017 C30.0154477,124.09294 33.9821891,118.936181 37.4200362,113.250519 C84.2936988,102.40813 127.068465,134.803175 131.564085,180.552928 C130.704619,173.412785 121.911675,169.446057 117.878845,170.437759 C115.89545,175.330056 112.523727,181.610723 107.102527,185.511359 C107.565306,181.147933 107.36706,176.652313 106.441409,172.288877 C104.986917,178.371226 102.144076,184.056918 98.2434297,188.949215 C91.962756,189.411984 85.682067,186.370805 82.3764353,181.809082 C82.1118796,181.610723 82.0458804,181.214056 81.8475419,180.949615 C81.6492014,180.486785 81.450866,180.024046 81.3186486,179.561236 C81.1203112,179.098467 80.9880958,178.635667 80.9219727,178.172897 C80.8557474,177.710087 80.8557474,177.247308 80.8557474,176.718426 C80.8557474,176.387841 80.8557474,176.057297 80.8557474,175.726754 C80.9219727,175.263923 81.0540858,174.801144 81.1863022,174.338354 C81.3184235,173.875585 81.4508558,173.412785 81.6491022,172.949995 C81.9136578,172.487236 82.1118715,172.024436 82.442457,171.561667 C83.5663647,168.388231 83.5663647,165.809872 81.5168878,164.289298 C81.1202099,164.024744 80.723533,163.826488 80.260733,163.628149 C79.9961753,163.561954 79.6657156,163.429811 79.4012868,163.363606 C79.2029474,163.297411 79.070733,163.231462 78.8723935,163.165257 C78.4095925,163.033134 77.9467915,162.900693 77.4840223,162.834703 C77.0212223,162.70259 76.5584531,162.636365 76.0956531,162.636365 C75.6328828,162.570068 75.1039578,162.504241 74.6411895,162.504241 C74.3106367,162.504241 73.9800511,162.570436 73.6494962,162.570436 C73.1206049,162.570436 72.657805,162.636733 72.1950337,162.768775 C71.7322337,162.835072 71.2694655,162.900888 70.8066655,163.033308 C70.3438942,163.165441 69.8810932,163.297871 69.4182933,163.496138 C68.955525,163.694467 68.5588461,163.892805 68.0960482,164.091143 C67.699402,164.289492 67.302723,164.553913 66.8399241,164.752251 C51.4357286,174.801328 60.6253652,198.337338 71.1372204,205.146917 C67.1704769,205.874148 63.1376441,206.733645 62.0137344,207.593071 C61.947509,207.659265 61.8816131,207.725204 61.8816131,207.725204 C64.7244459,209.444107 67.6994961,210.898589 70.8067576,212.154712 C75.0379626,213.543081 79.5335943,214.799214 81.5169799,215.328127 C81.5169799,215.328127 81.5169799,215.394322 81.5169799,215.394322 C87.0043069,216.51824 92.5577591,216.914917 98.1773067,216.584363 C127.465111,214.534876 151.463911,192.254979 155.827336,162.901092 C155.959459,163.496118 156.09189,164.02499 156.224013,164.620026 C156.422362,165.810015 156.686782,167.066159 156.818998,168.322292 C156.818998,168.322292 156.818998,168.322292 156.818998,168.388589 C156.951121,168.983604 157.017336,169.57861 157.083551,170.107502 C157.083551,170.239625 157.083551,170.30584 157.083551,170.372066 C157.149848,170.967071 157.215685,171.562096 157.215685,172.090979 C157.281879,172.81822 157.347808,173.54544 157.347808,174.272712 C157.347808,174.603266 157.347808,174.93383 157.347808,175.330496 C157.347808,175.661081 157.414003,176.057717 157.414003,176.388301 C157.414003,176.784989 157.347808,177.181635 157.347808,177.578312 C157.347808,177.908907 157.347808,178.23945 157.347808,178.503881 C157.347808,178.966691 157.281511,179.363348 157.281511,179.826137 C157.281511,180.09067 157.281511,180.35504 157.215316,180.685604 C157.215316,181.148414 157.149122,181.611163 157.149122,182.140065 C157.082825,182.338404 157.082825,182.536742 157.082825,182.735091 C157.01663,183.263994 156.950701,183.726783 156.884476,184.255686 C156.884476,184.454035 156.884476,184.652353 156.818281,184.850711 C156.751984,185.511809 156.619953,186.106845 156.553759,186.767942 C156.553759,186.767942 156.553759,186.834239 156.553759,186.834239 L156.553759,186.900434 C156.421635,187.495439 156.289185,188.156557 156.157051,188.751562 C156.157051,188.817757 156.157051,188.883685 156.157051,188.949911 C156.024948,189.544906 155.892497,190.139942 155.760395,190.734926 C155.760395,190.801223 155.6942,190.933275 155.6942,190.999459 C155.562056,191.594495 155.429626,192.1895 155.231431,192.784546 C155.231431,192.850741 155.231431,192.916649 155.231431,192.982864 C155.033092,193.643962 154.834743,194.238987 154.702508,194.834003 C154.636313,194.900197 154.636313,194.966126 154.636313,194.966126 C154.437964,195.627265 154.239646,196.288372 154.041328,196.94949 C153.776775,197.610629 153.578539,198.205634 153.314097,198.866762 C153.049554,199.52789 152.851287,200.189018 152.586846,200.784013 C152.322282,201.445162 152.057933,202.040177 151.793503,202.701275 C151.793503,202.701275 151.727206,202.701275 151.727206,202.701275 C151.462632,203.29628 151.198272,203.957428 150.867698,204.552454 C150.867698,204.552454 150.867698,204.552454 150.867698,204.552454 C150.867698,204.552454 150.867698,204.552454 150.867698,204.552454 C150.801503,204.750762 150.735595,204.883008 150.66938,205.015203 C150.603185,205.0815 150.603185,205.147326 150.537257,205.213562 C146.239965,213.874259 139.893144,221.477182 131.959688,227.427315 C131.430796,227.757869 130.901883,228.154556 130.373001,228.551213 C130.373001,228.551213 130.373001,228.551213 130.373001,228.551213 C130.240867,228.683346 130.042416,228.749571 129.910201,228.881766 C129.447401,229.21233 128.984621,229.542874 128.45575,229.873469 L128.654078,230.270146 L128.720272,230.270146 C129.645831,230.138033 130.571411,230.005592 131.49699,229.873469 L131.563185,229.873469 C133.282118,229.608915 135.001041,229.278454 136.719975,228.9479 C137.182734,228.881603 137.711667,228.749571 138.174426,228.617315 C138.50498,228.551018 138.769441,228.485202 139.099995,228.418977 C139.562795,228.35268 140.025575,228.220638 140.488385,228.154433 C140.885041,228.02231 141.281728,227.956074 141.678395,227.823869 C148.289626,226.237151 154.702549,224.055428 160.850959,221.477069 C150.339123,235.823438 136.257164,247.39312 119.795185,254.996043 C127.398129,254.46714 135.001041,253.211017 142.339513,251.095428 C168.982815,243.228013 191.394896,225.311582 204.815706,201.180557 C202.105101,216.452536 196.022763,230.997254 187.031491,243.690843 C193.444384,239.459613 199.328383,234.567305 204.683491,229.013869 C219.49266,213.543582 229.211203,193.908229 232.516793,172.818332 C234.764629,183.264096 235.425757,194.040455 234.434065,204.684526 C282.167212,138.109348 238.400803,69.0880165 220.087686,50.9071133 C220.021389,50.7749971 219.955562,50.7087769 219.955562,50.5765605 C219.889265,50.6427551 219.889265,50.6427551 219.889265,50.7086879 C219.889265,50.642483 219.889265,50.642483 219.823071,50.5765605 C219.823071,51.3699163 219.756876,52.1632354 219.690947,52.9565922 C219.492599,54.4771768 219.294281,55.9316476 219.029809,57.3861398 C218.699265,58.8406013 218.302578,60.2950424 217.905891,61.7495448 C217.443122,63.1378833 216.91425,64.5923551 216.319214,65.9807345 C215.724199,67.3029602 215.06307,68.6913293 214.33584,70.0135959 C213.608599,71.2697395 212.815255,72.5919754 211.955809,73.7819856 C211.096342,75.0381496 210.170763,76.2281497 209.245173,77.3520369 C208.253471,78.5420881 207.195706,79.5998931 206.137891,80.657688 C205.476783,81.2527034 204.881778,81.7815957 204.220619,82.3104675 C203.691737,82.7732777 203.228958,83.1699649 202.700035,83.6327137 C201.510025,84.5582931 200.320004,85.4177597 198.997768,86.2111238 C197.741625,87.0044571 196.419409,87.797811 195.097153,88.4589494 C193.708784,89.1200673 192.320415,89.7150724 190.932066,90.310098 C189.543697,90.8389699 188.089235,91.3017698 186.634722,91.698457 C185.180271,92.0951134 183.659697,92.4256877 182.205215,92.6901288 C180.684651,92.9546824 179.164056,93.0867955 177.709584,93.2190416 C176.651779,93.2852362 175.593994,93.3511751 174.536179,93.3511751 C173.015584,93.3511751 171.49503,93.2190416 170.040548,93.0866215 C168.519974,92.9544982 166.999369,92.7560165 165.544907,92.4254627 C164.024323,92.1609091 162.569831,91.7643243 161.115359,91.3015754 L161.049164,91.3015754 C162.503636,91.1694521 163.958118,91.0370014 165.41261,90.7726627 C166.933164,90.5081091 168.387636,90.1776678 169.842128,89.7809602 C171.29659,89.3842935 172.751061,88.9214935 174.13942,88.3926115 C175.593882,87.8637089 176.982261,87.2026114 178.304518,86.5414526 C179.692866,85.8803141 180.94901,85.1531038 182.271246,84.35975 C183.527369,83.5002936 184.783512,82.6408475 185.973533,81.7152475 C187.163564,80.7896886 188.287451,79.7980167 189.345287,78.7402117 C190.469194,77.7484989 191.460866,76.6246015 192.452558,75.5006836 C193.44422,74.3106938 194.36981,73.1206631 195.229276,71.9306323 C195.36141,71.7322837 195.49384,71.4678631 195.625974,71.2695144 C196.287071,70.2117093 196.948179,69.1539144 197.543184,68.0960991 C198.270435,66.773853 198.931574,65.4515966 199.526568,64.0632684 C200.121594,62.6748992 200.650497,61.2865198 201.113286,59.8320685 C201.576056,58.4436891 201.90662,56.9892378 202.237194,55.5347783 C202.501758,54.0141855 202.766076,52.5596913 202.898312,51.1052318 C203.030435,49.5846533 203.162855,48.0640596 203.162855,46.6096021 C203.162855,45.5517888 203.096558,44.4940022 203.030752,43.4362145 C202.898619,41.915634 202.700178,40.4611377 202.50185,39.0066772 C202.237286,37.4860854 201.906845,36.031628 201.510147,34.5771296 C201.047388,33.1887901 200.584578,31.734305 200.055696,30.3459676 C199.526763,28.9575902 198.865676,27.5692272 198.204517,26.2469698 C197.477286,24.9247257 196.750065,23.6024816 195.956722,22.3463586 C195.097265,21.0902355 194.237778,19.9002078 193.312209,18.7101669 C192.320548,17.5862582 191.328855,16.4623515 190.27103,15.3384439 C189.742148,14.8095546 189.147122,14.2145341 188.552117,13.685648 C185.577071,11.3716993 182.469779,9.18997737 179.362517,7.20662045 C178.899738,6.94207301 178.503061,6.74382868 178.040261,6.54548 C175.858538,5.15713947 173.809061,4.42987903 171.759594,3.76877541 L171.759482,3.76840811 Z" fill="#E0234E"> </path> </g> </g></svg>
        ),
        'ExpressJs': (
            <svg style={techIconStyle} width="18px" height="18px" viewBox="0 -181.5 512 512" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" preserveAspectRatio="xMidYMid" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path d="M3.33224862,115.629027 L3.33224862,58.6475756 L74.4757566,58.6475756 L74.4757566,55.315327 L3.33224862,55.315327 L3.33224862,3.33224862 L78.9742922,3.33224862 L78.9742922,0 L-3.55271368e-15,0 L-3.55271368e-15,118.961276 L79.640742,118.961276 L79.640742,115.629027 L3.33224862,115.629027 L3.33224862,115.629027 Z M143.786528,33.3224862 L114.296128,72.1431826 L85.472177,33.3224862 L81.1402538,33.3224862 L112.296778,74.642369 L78.14123,118.961276 L82.1399284,118.961276 L114.296128,77.1415554 L146.618939,118.961276 L150.78425,118.961276 L116.462089,74.642369 L147.785226,33.3224862 L143.786528,33.3224862 L143.786528,33.3224862 Z M160.780996,148.285063 L160.780996,94.9690856 L161.114221,94.9690856 C163.11358,102.744371 167.056701,108.992275 172.943703,113.712984 C178.830705,118.433693 186.32819,120.794012 195.436381,120.794012 C201.323384,120.794012 206.543854,119.599969 211.09795,117.211845 C215.652046,114.823722 219.456324,111.574812 222.510902,107.465018 C225.565478,103.355224 227.898028,98.5790488 229.508624,93.1363488 C231.119218,87.6936488 231.924504,81.973346 231.924504,75.9752684 C231.924504,69.532889 231.09145,63.5904384 229.425318,58.1477384 C227.759184,52.7050384 225.343328,47.9844 222.177676,43.9856818 C219.012024,39.9869634 215.179976,36.8768958 210.681418,34.6553856 C206.18286,32.4338754 201.101232,31.323137 195.436381,31.323137 C191.104437,31.323137 187.07801,31.9618116 183.35698,33.23918 C179.635951,34.5165484 176.331504,36.3214982 173.443541,38.654084 C170.555577,40.9866696 168.056416,43.7357472 165.945981,46.9013992 C163.835546,50.0670512 162.224976,53.5381088 161.114221,57.3146762 L160.780996,57.3146762 L160.780996,33.3224862 L157.448747,33.3224862 L157.448747,148.285063 L160.780996,148.285063 L160.780996,148.285063 Z M195.436381,117.628376 C184.995284,117.628376 176.609208,114.046245 170.277904,106.881874 C163.9466,99.717504 160.780996,89.415405 160.780996,75.9752684 C160.780996,70.421493 161.558513,65.1454854 163.11357,60.1470876 C164.668627,55.1486896 166.917872,50.7612728 169.861373,46.9847054 C172.804874,43.2081382 176.442543,40.2091444 180.774487,37.9876342 C185.106432,35.766124 189.993681,34.6553856 195.436381,34.6553856 C200.990156,34.6553856 205.849638,35.766124 210.01497,37.9876342 C214.1803,40.2091444 217.62359,43.2359066 220.34494,47.0680118 C223.06629,50.9001168 225.121156,55.2875336 226.5096,60.2303938 C227.898044,65.173254 228.592256,70.421493 228.592256,75.9752684 C228.592256,80.9736664 227.95358,85.9442208 226.676212,90.887081 C225.398844,95.8299412 223.427284,100.272895 220.76147,104.216075 C218.095658,108.159256 214.680138,111.380398 210.514806,113.879596 C206.349474,116.378795 201.323384,117.628376 195.436381,117.628376 L195.436381,117.628376 L195.436381,117.628376 Z M250.251872,118.961276 L250.251872,70.4770582 C250.251872,65.8118868 250.918314,61.2578592 252.25122,56.814839 C253.584126,52.3718186 255.638992,48.4564656 258.41588,45.0686626 C261.192768,41.6808596 264.719362,39.0150872 268.99577,37.0712658 C273.272176,35.1274444 278.353806,34.322159 284.240808,34.6553856 L284.240808,31.323137 C279.131334,31.2120614 274.660612,31.7674308 270.828506,32.9892614 C266.996402,34.211092 263.691954,35.8771996 260.915066,37.9876342 C258.138178,40.098069 255.916702,42.569462 254.25057,45.4018874 C252.584436,48.2343128 251.362624,51.2610752 250.585096,54.4822648 L250.251872,54.4822648 L250.251872,33.3224862 L246.919622,33.3224862 L246.919622,118.961276 L250.251872,118.961276 L250.251872,118.961276 Z M288.406118,76.8083306 L360.049464,76.8083306 C360.271614,70.9213286 359.688476,65.2565626 358.300032,59.8138626 C356.911588,54.3711628 354.690112,49.5394506 351.635536,45.3185812 C348.580958,41.0977118 344.637838,37.7099596 339.806052,35.155223 C334.974268,32.6004862 329.226196,31.323137 322.561666,31.323137 C317.78542,31.323137 313.120318,32.3228016 308.566222,34.3221608 C304.012126,36.32152 300.013468,39.2372084 296.570126,43.0693134 C293.126786,46.9014184 290.34994,51.5942884 288.239506,57.1480638 C286.12907,62.7018392 285.07387,69.0330484 285.07387,76.1418808 C285.07387,82.473185 285.79585,88.387867 287.23983,93.8861048 C288.683812,99.3843424 290.90529,104.160518 293.904328,108.214774 C296.903366,112.26903 300.763182,115.406866 305.483892,117.628376 C310.204602,119.849886 315.897136,120.905088 322.561666,120.794012 C332.33631,120.794012 340.555776,118.044935 347.220306,112.546697 C353.884836,107.048459 357.827958,99.3010588 359.049788,89.304263 L355.71754,89.304263 C354.273558,98.7456812 350.580352,105.826639 344.637814,110.547348 C338.695274,115.268057 331.225558,117.628376 322.228442,117.628376 C316.119288,117.628376 310.954354,116.573175 306.733486,114.46274 C302.512616,112.352305 299.069326,109.464385 296.403514,105.798894 C293.737702,102.133402 291.766142,97.8292904 290.488774,92.8864302 C289.211404,87.94357 288.517194,82.5842572 288.406118,76.8083306 L288.406118,76.8083306 L288.406118,76.8083306 Z M356.717214,73.476082 L288.406118,73.476082 C288.739344,67.4780046 289.850082,62.0909232 291.738366,57.3146762 C293.62665,52.5384294 296.098044,48.4564656 299.15262,45.0686626 C302.207196,41.6808596 305.76156,39.0983926 309.815816,37.3211846 C313.870072,35.5439764 318.22972,34.6553856 322.89489,34.6553856 C328.448666,34.6553856 333.335916,35.6828186 337.556784,37.7377156 C341.777654,39.7926126 345.304248,42.597227 348.136674,46.1516434 C350.9691,49.7060596 353.107272,53.8435602 354.551252,58.5642694 C355.995234,63.2849786 356.717214,68.255533 356.717214,73.476082 L356.717214,73.476082 L356.717214,73.476082 Z M429.193622,58.6475756 L432.52587,58.6475756 C432.52587,49.0950818 429.749024,42.1529666 424.195248,37.8210218 C418.641474,33.489077 411.088452,31.323137 401.535958,31.323137 C396.204334,31.323137 391.705844,31.98958 388.040352,33.3224862 C384.37486,34.6553922 381.375866,36.3770368 379.04328,38.4874716 C376.710694,40.5979062 375.044586,42.930457 374.044908,45.4851936 C373.045228,48.0399304 372.545396,50.4835548 372.545396,52.8161406 C372.545396,57.481312 373.37845,61.2022858 375.044582,63.9791734 C376.710714,66.7560612 379.32095,68.9220012 382.875366,70.4770582 C385.319028,71.5878134 388.095874,72.587478 391.205988,73.476082 C394.316102,74.364686 397.926002,75.3088138 402.035796,76.3084934 C405.701288,77.1970974 409.311188,78.0856882 412.865604,78.9742922 C416.42002,79.8628962 419.557856,81.0569402 422.279206,82.5564594 C425.000556,84.0559788 427.222032,85.9720026 428.943704,88.3045884 C430.665374,90.637174 431.526196,93.6917048 431.526196,97.468272 C431.526196,101.133764 430.665374,104.243831 428.943704,106.798568 C427.222032,109.353305 425.028324,111.435939 422.362512,113.046534 C419.6967,114.657129 416.725474,115.823405 413.448748,116.545395 C410.17202,117.267386 406.978646,117.628376 403.868532,117.628376 C393.760662,117.628376 386.01326,115.379131 380.626098,110.880573 C375.238936,106.382015 372.545396,99.3010572 372.545396,89.6374878 L369.213146,89.6374878 C369.213146,100.411812 372.128836,108.298055 377.9603,113.296453 C383.791764,118.294851 392.427754,120.794012 403.868532,120.794012 C407.534024,120.794012 411.22723,120.377485 414.94826,119.544419 C418.669288,118.711353 422.001504,117.350698 424.945004,115.462415 C427.888506,113.574131 430.276594,111.130506 432.10934,108.131468 C433.942086,105.132429 434.858444,101.466992 434.858444,97.1350472 C434.858444,93.0252534 434.05316,89.693038 432.442564,87.1383014 C430.83197,84.5835646 428.721566,82.4731616 426.111292,80.807029 C423.501018,79.1408964 420.55756,77.8357786 417.280834,76.8916368 C414.004106,75.947495 410.699658,75.0311358 407.367394,74.1425318 C402.702222,72.9207012 398.620258,71.8654996 395.12138,70.9768956 C391.622502,70.0882914 388.373592,69.03309 385.374552,67.8112594 C382.48659,66.5894288 380.181808,64.8400158 378.460136,62.5629678 C376.738466,60.2859198 375.877644,57.03701 375.877644,52.8161406 C375.877644,52.038612 376.099792,50.650189 376.544094,48.6508298 C376.988396,46.6514706 378.043598,44.624373 379.70973,42.569476 C381.375862,40.5145792 383.93056,38.6818608 387.373902,37.0712658 C390.817242,35.460671 395.53788,34.6553856 401.535958,34.6553856 C405.645752,34.6553856 409.394494,35.099681 412.782298,35.988285 C416.1701,36.8768892 419.085788,38.2930806 421.52945,40.236902 C423.973112,42.1807234 425.861366,44.6521164 427.194272,47.6511552 C428.527178,50.650194 429.193622,54.3156308 429.193622,58.6475756 L429.193622,58.6475756 L429.193622,58.6475756 Z M506.335178,58.6475756 L509.667426,58.6475756 C509.667426,49.0950818 506.89058,42.1529666 501.336804,37.8210218 C495.783028,33.489077 488.230008,31.323137 478.677514,31.323137 C473.34589,31.323137 468.847398,31.98958 465.181906,33.3224862 C461.516416,34.6553922 458.517422,36.3770368 456.184836,38.4874716 C453.85225,40.5979062 452.186142,42.930457 451.186462,45.4851936 C450.186784,48.0399304 449.68695,50.4835548 449.68695,52.8161406 C449.68695,57.481312 450.520004,61.2022858 452.186138,63.9791734 C453.85227,66.7560612 456.462506,68.9220012 460.016922,70.4770582 C462.460582,71.5878134 465.237428,72.587478 468.347544,73.476082 C471.457658,74.364686 475.067558,75.3088138 479.177352,76.3084934 C482.842842,77.1970974 486.452742,78.0856882 490.00716,78.9742922 C493.561576,79.8628962 496.699412,81.0569402 499.420762,82.5564594 C502.142112,84.0559788 504.363588,85.9720026 506.085258,88.3045884 C507.80693,90.637174 508.667752,93.6917048 508.667752,97.468272 C508.667752,101.133764 507.80693,104.243831 506.085258,106.798568 C504.363588,109.353305 502.16988,111.435939 499.504068,113.046534 C496.838256,114.657129 493.86703,115.823405 490.590302,116.545395 C487.313576,117.267386 484.120202,117.628376 481.010088,117.628376 C470.902216,117.628376 463.154816,115.379131 457.767654,110.880573 C452.380492,106.382015 449.68695,99.3010572 449.68695,89.6374878 L446.354702,89.6374878 C446.354702,100.411812 449.27039,108.298055 455.101854,113.296453 C460.93332,118.294851 469.56931,120.794012 481.010088,120.794012 C484.67558,120.794012 488.368784,120.377485 492.089814,119.544419 C495.810844,118.711353 499.14306,117.350698 502.08656,115.462415 C505.030062,113.574131 507.418148,111.130506 509.250894,108.131468 C511.08364,105.132429 512,101.466992 512,97.1350472 C512,93.0252534 511.194714,89.693038 509.58412,87.1383014 C507.973524,84.5835646 505.863122,82.4731616 503.252848,80.807029 C500.642572,79.1408964 497.699116,77.8357786 494.422388,76.8916368 C491.145662,75.947495 487.841214,75.0311358 484.508948,74.1425318 C479.843778,72.9207012 475.761814,71.8654996 472.262936,70.9768956 C468.764056,70.0882914 465.515146,69.03309 462.516108,67.8112594 C459.628144,66.5894288 457.323362,64.8400158 455.601692,62.5629678 C453.880022,60.2859198 453.0192,57.03701 453.0192,52.8161406 C453.0192,52.038612 453.241348,50.650189 453.68565,48.6508298 C454.129952,46.6514706 455.185152,44.624373 456.851286,42.569476 C458.517418,40.5145792 461.072116,38.6818608 464.515458,37.0712658 C467.958798,35.460671 472.679436,34.6553856 478.677514,34.6553856 C482.787308,34.6553856 486.53605,35.099681 489.923852,35.988285 C493.311656,36.8768892 496.227344,38.2930806 498.671006,40.236902 C501.114666,42.1807234 503.002922,44.6521164 504.335828,47.6511552 C505.668734,50.650194 506.335178,54.3156308 506.335178,58.6475756 L506.335178,58.6475756 L506.335178,58.6475756 Z" fill="#222222"> </path> </g> </g></svg>
        ),

        };
        return icons[name] || null;
    };

    const IsSubSetArray = (subset = [], all = []) => {
        console.log('All>> ', all)
        console.log('Subset>> ',subset)
        if (all.length === 0 || subset?.length === 0) return 1;
        let count = 0;
        for (let i = 0; i < all.length; i++) {
            if (subset.includes(all[i])) {
                count++;
            }
        }
        return count === all.length;
    };

    const toggleTech = (index) => {
        const newTechStates = [...techStates];
        newTechStates[index].checked = !newTechStates[index].checked;
        setTechStates(newTechStates);
        setTechSet([...newTechStates.filter(tech => tech.checked).map(tech => tech.name), ...langStates.filter(lang => lang.checked).map(lang => lang.name)]);
    };

    const toggleLang = (index) => {
        const newLangStates = [...langStates];
        newLangStates[index].checked = !newLangStates[index].checked;
        setLangStates(newLangStates);
        setTechSet([...newLangStates.filter(tech => tech.checked).map(tech => tech.name), ...techStates.filter(lang => lang.checked).map(lang => lang.name)]);
    };

    const contentAreaStyle = {
        flex: 1,
        padding: '40px 30px',
        display: 'flex',
        flexWrap: 'wrap',
        gap: '30px',
        alignItems: 'flex-start'
    };

    const projectCardStyle = {
        backgroundColor: '#161b26',
        borderRadius: '8px',
        overflow: 'hidden',
        width: '320px',
        border: '1px solid #2d3748',
        transition: 'all 0.3s ease',
        cursor: 'pointer',
        height: '360px'
    };

    const projectImageStyle = {
        width: '100%',
        height: '180px',
        objectFit: 'cover',
        display: 'block'
    };

    const projectContentStyle = {
        padding: '20px'
    };

    const projectTitleStyle = {
        color: '#4299e1',
        fontSize: '16px',
        fontWeight: '500',
        marginBottom: '5px'
    };

    const projectDescStyle = {
        color: '#a0aec0',
        fontSize: '14px',
        lineHeight: '1.4',
        marginBottom: '20px'
    };

    const viewProjectButtonStyle = {
        bottom: '20px',
        position: 'absolute',
        left: '20px',
        backgroundColor: '#4299e1',
        color: '#ffffff',
        border: 'none',
        padding: '8px 16px',
        borderRadius: '4px',
        fontSize: '12px',
        cursor: 'pointer',
        transition: 'background-color 0.2s ease'
    };

    const footerStyle = {
        position: 'absolute',
        bottom: '20px',
        left: '20px',
        fontSize: '12px',
        color: '#718096'
    };

    const socialLinksStyle = {
        display: 'flex',
        gap: '15px'
    };

    const socialLinkStyle = {
        color: '#718096',
        fontSize: '18px',
        cursor: 'pointer',
        transition: 'color 0.2s ease'
    };

    return (
        <>
            <div style={{ 
                display: 'flex',
                height: 'auto',            // chiếm toàn bộ chiều
                width: '100vw',             // chiếm toàn bộ chiều
                minHeight: 'calc(100vh - 112px)', // trừ chiều cao
                flexDirection: 'row',
            }}>
            <div style={{height: 'auto', borderRight: '1px solid #90A1B9', alignItems: "left", justifyItems: 'left'}}>
                <Item>
                    <div style={{
                        fontSize: '20px', fontWeight: 'bold', display: 'flex', alignItems: 'center', gap: '10px', cursor: 'pointer',
                        marginTop: '10px',
                        backgroundColor: isPlangOpen ? '#bfc9d6ff' : 'transparent',
                        color: isPlangOpen ? '#f14f65ff' : '#90A1B9',
                        transition: 'background-color 0.3s, color 0.3s',
                        '&:hover': {
                            backgroundColor: '#bfc9d6ff',
                            color: '#e72e46ff',
                        }
                    }} onClick={() => setPlangOpen(!isPlangOpen)}>
                        <TerminalTwoTone sx={{ fontSize: 32 }} />{' '}
                        Programming Languages
                        {isPlangOpen ? (
                            <ArrowDropDownRounded sx={{ fontSize: 32, color: '#f14f65ff' }} />
                        ) : (
                            <ArrowDropUpRounded sx={{ fontSize: 32, color: '#90A1B9' }} />
                        )}
                    </div>
                        {isPlangOpen && (
                            <div>
                            {langStates.map((tech, index) => (
                                <div
                                    key={tech.name}
                                    style={techItemStyle}
                                    onClick={() => toggleLang(index)}
                                    onMouseEnter={(e) => {
                                    e.target.style.backgroundColor = '#2a2f3a';
                                    }}
                                    onMouseLeave={(e) => {
                                    e.target.style.backgroundColor = 'transparent';
                                    }}
                                >
                                    <div style={checkboxStyle(tech.checked)}>
                                        {tech.checked && (
                                            <div style={{
                                            position: 'absolute',
                                            top: '2px',
                                            left: '3px',
                                            width: '6px',
                                            height: '3px',
                                            border: '1px solid #ffffff',
                                            borderTop: 'none',
                                            borderRight: 'none',
                                            transform: 'rotate(-45deg)'
                                            }}/>
                                        )}
                                    </div>
                                    {getProgrammingIcon(tech.name)}
                                    <span>{tech.name}</span>
                                </div>
                            ))}                            
                            </div>
                        )}
                    <Divider style={{backgroundColor: '#90A1B9'}} />
                    <div style={{
                        fontSize: '20px', fontWeight: 'bold', display: 'flex', alignItems: 'center', gap: '10px', cursor: 'pointer',
                        backgroundColor: isFrameworkOpen ? '#bfc9d6ff' : 'transparent',
                        color: isFrameworkOpen ? '#f14f65ff' : '#90A1B9',
                        transition: 'background-color 0.3s, color 0.3s',
                        '&:hover': {
                            backgroundColor: '#bfc9d6ff',
                            color: '#FFA1AD',
                        }
                    }} onClick={() => setFrameworkOpen(!isFrameworkOpen)}>
                        <DataObjectTwoTone sx={{fontSize: 32}} />{' '}
                        Frameworks
                        {isFrameworkOpen ? (
                            <ArrowDropDownRounded sx={{ fontSize: 32, color: '#f14f65ff' }} />
                        ) : (
                            <ArrowDropUpRounded sx={{ fontSize: 32, color: '#90A1B9' }} />
                        )}
                        </div>
                        {isFrameworkOpen && (
                            <div>
                            {techStates.map((tech, index) => (
                                <div
                                    key={tech.name}
                                    style={techItemStyle}
                                    onClick={() => toggleTech(index)}
                                    onMouseEnter={(e) => {
                                    e.target.style.backgroundColor = '#2a2f3a';
                                    }}
                                    onMouseLeave={(e) => {
                                    e.target.style.backgroundColor = 'transparent';
                                    }}
                                >
                                    <div style={checkboxStyle(tech.checked)}>
                                        {tech.checked && (
                                            <div style={{
                                            position: 'absolute',
                                            top: '2px',
                                            left: '3px',
                                            width: '6px',
                                            height: '3px',
                                            border: '1px solid #ffffff',
                                            borderTop: 'none',
                                            borderRight: 'none',
                                            transform: 'rotate(-45deg)'
                                            }}/>
                                        )}
                                    </div>
                                    {getFrameworkIcon(tech.name)}
                                    <span>{tech.name}</span>
                                </div>
                            ))}                            
                            </div>
                        )}
                    </Item>
            </div>
            <div style={contentAreaStyle}>
            {projects.map((project, index) => ( (IsSubSetArray(project.tech, techSet))) && (
                <div
                key={project.id}
                style={projectCardStyle}
                onMouseEnter={(e) => {
                    e.currentTarget.style.transform = 'translateY(-5px)';
                    e.currentTarget.style.boxShadow = '0 10px 25px rgba(0, 0, 0, 0.3)';
                }}
                onMouseLeave={(e) => {
                    e.currentTarget.style.transform = 'translateY(0)';
                    e.currentTarget.style.boxShadow = 'none';
                }}
                >
                <div style={{ position: 'relative' }}>
                    <img
                    src={project.image}
                    alt={project.title}
                    style={projectImageStyle}
                    />
                    <div style={{
                    position: 'absolute',
                    top: '10px',
                    right: '10px',
                    backgroundColor: 'rgba(0, 0, 0, 0.7)',
                    borderRadius: '4px',
                    padding: '4px 8px',
                    fontSize: '12px',
                    color: '#ffffff'
                    }}>
                    Project {index + 1}
                    </div>
                    <div style={{position: 'absolute', top: '40px', right: '10px', 
                        display: 'flex', gap: '10px', zIndex: 1, flexDirection: 'column', 
                        backgroundColor: 'rgba(0, 0, 0, 0.7)', justifyItems: 'center', 
                        alignItems: 'center', padding: '5px', borderRadius: '8px', textAlign: 'center',
                        paddingLeft: '12px'
                    }}>
                        {project.tech.map((tech, techIndex) => (
                            <div key={techIndex}>
                                {getFrameworkIcon(tech) || getProgrammingIcon(tech)}
                            </div>
                        ))}
                    </div>
                </div>
                
                <div style={projectContentStyle}>
                    <div style={projectTitleStyle}>
                    Project {index + 1} <span style={{ color: '#718096' }}>// _{project.title}</span>
                    </div>
                    <div style={projectDescStyle}>{project.description}</div>
                    <button
                    style={{ ...viewProjectButtonStyle, backgroundColor: project.deploy ? '#4299e1' : '#718096', color: '#ffffff', cursor: project.deploy ? 'pointer' : 'not-allowed' }}
                    onMouseEnter={(e) => {
                        e.target.style.backgroundColor = '#3182ce';
                    }}
                    onMouseLeave={(e) => {
                        e.target.style.backgroundColor = '#4299e1';
                    }}
                    disabled={!project.deploy}

                    >
                    view-project
                    </button>
                    <button
                    style={{ ...viewProjectButtonStyle, right: '20px', left: 'auto', backgroundColor: '#e19c42ff', color: '#ffffff' }}
                    onMouseEnter={(e) => {
                        e.target.style.backgroundColor = '#e08917ff';
                    }}
                    onMouseLeave={(e) => {
                        e.target.style.backgroundColor = '#e19c42ff';
                    }}
                    onClick={() => window.open(project.github, '_blank')}
                    >
                    <GitHub />
                    </button>
                </div>
                </div>
            ))}
            </div>
            </div>
        </>
    )
}
